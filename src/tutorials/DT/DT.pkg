<?xml version="1.0" ?>
<refentry id="{@id DT}">
    <refnamediv>
        <refname>時間操作モジュール DT</refname>
    </refnamediv>
    <refsynopsisdiv>
        Author : <author>trashtoy</author>
    </refsynopsisdiv>
    {@toc}
    <refsect1 id="{@id intro}">
        <title>やりたいことを, より簡単に.</title>
        <para>
            パッケージ DT は, 時間操作・入出力のためのライブラリです.
            PHP にはもともと {@link http://www.php.net/manual/ja/ref.datetime.php 日付・時刻関数}
            が用意されていますが, このモジュールは標準の API に比べて, 
            よりオブジェクト指向な設計となっています.
        </para>
        <para>
            DT モジュールを利用することで, 時間処理に関する様々な処理を, より簡潔に実現することができます.
            拡張性の高い API となっているため, 様々なニーズに対して低コストで対応することができます.
            このモジュールを使う利点については {@tutorial DT.features.pkg} を参照してください.
        </para>
    </refsect1>
    <refsect1 id="{@id examples}">
        <title>使い方</title>
        <para>このモジュールの使い勝手をお伝えするため, いくつかのコード例をお見せします.</para>
        <refsect2 id="{@id init}">
            <title>時間オブジェクトの生成</title>
            <para>
                ある特定の日付または時刻を表現するオブジェクト
                (「<emphasis>時間オブジェクト</emphasis>」 と呼びます)
                を生成するためには, 以下のように書きます.
            </para>
            <programlisting role="php">
                <![CDATA[
// 指定された年月日 (2012/05/21) をあらわすオブジェクト
$d1 = new Peach_DT_Date(2012, 5, 21);

// 指定された年月日・時刻 (2012/05/21 07:34) をあらわすオブジェクト
$d2 = new Peach_DT_Datetime(2012, 5, 21, 7, 34);

// 指定された年月日・時刻 (2012/05/21 07:34:45) をあらわすオブジェクト
$d3 = new Peach_DT_Timestamp(2012, 5, 21, 7, 34, 45);
                ]]>
            </programlisting>
        </refsect2>
        <refsect2 id="{@id get}">
            <title>フィールドの参照</title>
            <para>
                時間オブジェクトから「日」や「分」など特定のフィールドを参照するのも簡単に出来ます.
            </para>
            <programlisting role="php">
                <![CDATA[
$date = new Peach_DT_Date(2012, 5, 21);
var_dump($date->get("year"));  // int(2012)
var_dump($date->get("month")); // int(5)
var_dump($date->get("date"));  // int(21)
                ]]>
            </programlisting>
        </refsect2>
        <refsect2 id="{@id set_and_add}">
            <title>フィールドの上書き</title>
            <para>もちろん, 特定のフィールドを上書きしたり, 加算・減算することも出来ます.</para>
            <para>以下のコードは, 日付の「月」の値を 7 から 10 に変更します.</para>
            <programlisting role="php">
                <![CDATA[
$date = new Peach_DT_Datetime(2012, 5, 21, 7, 34);
$test = $date->set("month", 10);
var_dump($test->__toString()); // string(16) "2012-10-21 07:34"
                ]]>
            </programlisting>
            
            <para>以下のコードは 100 分後の時刻を計算します.</para>
            <programlisting role="php">
                <![CDATA[
$date = new Peach_DT_Datetime(2012, 5, 21, 7, 34);
$test = $date->add("minute", 100);
var_dump($test->__toString()); // string(16) "2012-05-21 09:14"
                ]]>
            </programlisting>
        </refsect2>
        <refsect2 id="{@id format}">
            <title>時間オブジェクトを文字列に変換</title>
            <para>
                文字列の出力方法も色々あります.
                引数無しで format() を実行した場合は
                <code>"YYYY-MM-DD hh:mm:ss"</code> 形式のフォーマットになるため,
                SQL との連携が簡単にできます.
            </para>
            <programlisting role="php">
                <![CDATA[
$d1 = new Peach_DT_Date(2012, 5, 21);
$d2 = new Peach_DT_Datetime(2012, 5, 21, 7, 34);
$d3 = new Peach_DT_Timestamp(2012, 5, 21, 7, 34, 45);
var_dump($d1->format());   // string(10) "2012-05-21"
var_dump($d2->format());   // string(16) "2012-05-21 07:34"
var_dump($d3->format());   // string(19) "2012-05-21 07:34:45"
                ]]>
            </programlisting>
            <para>
                出力のカスタマイズも簡単に出来ます.
                format() の引数に {@link Peach_DT_Format} オブジェクトを指定してください.
                Java の {@link http://docs.oracle.com/javase/jp/7/api/java/text/SimpleDateFormat.html SimpleDateFormat}
                と同じような使い勝手で活用できます.
            </para>
            <programlisting role="php">
                <![CDATA[
$f  = new Peach_DT_SimpleFormat("Y/m/d H:i:s");

$d1 = new Peach_DT_Date(2012, 5, 21);
$d2 = new Peach_DT_Datetime(2012, 5, 21, 7, 34);
$d3 = new Peach_DT_Timestamp(2012, 5, 21, 7, 34, 45);
var_dump($d1->format($f)); // string(19) "2012/05/21 00:00:00"
var_dump($d2->format($f)); // string(19) "2012/05/21 07:34:00"
var_dump($d3->format($f)); // string(19) "2012/05/21 07:34:45"
                ]]>
            </programlisting>
        </refsect2>
        <refsect2 id="{@id parse}">
            <title>文字列から時間オブジェクトへの変換</title>
            <para>逆に、文字列から時間オブジェクトへの変換も同様に出来ます.</para>
            <programlisting role="php">
                <![CDATA[
$d1 = Peach_DT_Date::parse("2012-05-21");
$d2 = Peach_DT_Datetime::parse("2012-05-21 07:34");
$d3 = Peach_DT_Timestamp::parse("2012-05-21 07:34:45");
                ]]>
            </programlisting>
            <para>フォーマットを指定した変換も可能です.</para>
            <programlisting role="php">
                <![CDATA[
$f    = new Peach_DT_SimpleFormat("Y/m/d H:i:s");
$date = Peach_DT_Timestamp::parse("2012/05/21 07:34:45", $f);
var_dump($date->get("second")); // int(45)
                ]]>
            </programlisting>
        </refsect2>
    </refsect1>
    <refsect1 id="{@id next}">
        <title>APIの詳細について</title>
        <para>詳しくはこちらをご覧ください。</para>
        <itemizedlist>
            <listitem>{@tutorial DT.basic.pkg}</listitem>
            <listitem>{@tutorial DT.init.pkg}</listitem>
            <listitem>{@tutorial DT.format.pkg}</listitem>
        </itemizedlist>
    </refsect1>
</refentry>